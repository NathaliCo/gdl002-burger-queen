{"version":3,"sources":["firebase.js","components/Context.js","components/CartItem.js","components/CartList.js","components/CartTotals.js","components/KitchenOrder.js","components/Product.js","components/ButtonMenuBreakfast.js","components/ButtonMenuMeal.js","components/ProductList.js","components/WaiterPage.js","components/Header.js","components/PrintInKitchen.js","components/ChefPage.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","actualcommand","menuBreakfast","menu","filter","item","hour","menuMeal","ProductContext","React","createContext","ProductProvider","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","writeKitchenData","database","ref","child","Date","now","set","state","order","console","log","on","snapshot","val","writeUserData","getUserData","setState","increment","id","tempCart","toConsumableArray","selectedProduct","find","index","indexOf","product","count","total","value","addTotals","decrement","remove","tempProducts","getItem","removedProduct","status","clear","setProducts","map","cartTotal","tempMenu","forEach","singleItem","objectSpread","concat","addToCart","price","push","cartClient","cartWaiter","cartDate","prevProps","prevState","react_default","a","createElement","Provider","handleProduct","printOrder","props","children","Component","ProductConsumer","Consumer","CartItem","_ref","description","img","date","client","waiter","className","src","class","onClick","CartList","CartItem_CartItem","key","CartTotals","Fragment","KitchenOrder","Product","alt","ButtonMenuBreakfast","isHidden","document","getElementsByClassName","setAttribute","name","toggleHidden","bind","ButtonMenuMeal","WaiterPage","Context_ProductProvider","components_ButtonMenuBreakfast","components_ButtonMenuMeal","KitchenOrder_KitchenOrder","Header","react_router_dom","exact","to","Link","newState","ChefPage","App","src_components_Header","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02d61a8e.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\n\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBjd2iTaUw5Ez6YdJ33mPG9EwOoyhLOkJE\",\r\n    authDomain: \"burger-queen-5d91f.firebaseapp.com\",\r\n    databaseURL: \"https://burger-queen-5d91f.firebaseio.com\",\r\n    projectId: \"burger-queen-5d91f\",\r\n    storageBucket: \"burger-queen-5d91f.appspot.com\",\r\n    messagingSenderId: \"962536005959\",\r\n    appId: \"1:962536005959:web:60857f12a7f342ef\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;\r\n\r\n//   const database = firebase.database();\r\n// database.ref('menu')\r\n// .once('value')\r\n// .then((snapshot) => {\r\n//     const val = snapshot.val();\r\n//     console.log(val);\r\n// })\r\n// .catch((e) => {\r\n//     console.log('Error fetching data', e)\r\n// })","import firebase from '../firebase'\r\nimport React, {Component} from 'react';\r\nimport {menu} from '../menu.json'\r\n\r\nlet actualcommand =[]\r\nlet menuBreakfast =menu.filter(item=>(item.hour==\"morning\"))\r\nlet menuMeal =menu.filter(item=>(item.hour==\"evening\"))\r\n\r\n\r\nconst ProductContext = React.createContext();\r\n\r\nclass ProductProvider extends Component {\r\n    constructor (){\r\n        super ();\r\n      \r\n    this.state = {\r\n        menuBreakfast: menuBreakfast,\r\n        menuMeal: menuMeal,\r\n        menu: [],\r\n        order: [],\r\n        cartClient:\"\",\r\n        cartWaiter:\"\",\r\n        cartDate: Date.now(),\r\n        cartTotal: 0\r\n    }\r\n\r\n}\r\n\r\n\r\nwriteKitchenData = ()=>{\r\n    let orderRef = firebase.database().ref('order');\r\n    orderRef.child(\r\n   Date.now()).set(this.state.order)\r\n    console.log(\"saved\")\r\n    let ref = firebase.database().ref('order');\r\n        ref.on('value', snapshot => {\r\n          const order = snapshot.val();\r\n          console.log(order);\r\n        });\r\n}\r\n\r\nwriteUserData = () => {\r\n    firebase.database().ref('menu').set(menu);\r\n  }\r\n\r\n  getUserData = () => {\r\n    let ref = firebase.database().ref('menu');\r\n    ref.on('value', snapshot => {\r\n      const menu = snapshot.val();\r\n      this.setState(menu);\r\n      console.log(menu);\r\n    });\r\n}\r\ncomponentDidMount(){\r\n    this.setProducts();\r\n    this.getUserData();\r\n    this.writeKitchenData();\r\n   \r\n    \r\n}\r\n\r\ncomponentDidUpdate(prevProps, prevState){\r\nif (prevState != this.state){\r\n    this.writeUserData();\r\n\r\n}\r\n}\r\n\r\n\r\nincrement = (id)=>{\r\n    let tempCart= [...this.state.order];\r\n    const selectedProduct = tempCart.find(item=>item.id===id)\r\n    const index = tempCart.indexOf(selectedProduct);\r\n    const product = tempCart[index];\r\n    product.count = product.count +1;\r\n    product.total = product.count *product.value;\r\n    this.setState(\r\n        ()=>{\r\n            return{ order:[...tempCart]};\r\n        },\r\n        ()=>{this.addTotals();\r\n        }\r\n    );\r\n};\r\n\r\ndecrement =(id)=>{\r\n    let tempCart= [...this.state.order];\r\n    const selectedProduct = tempCart.find(item=>item.id===id)\r\n    const index = tempCart.indexOf(selectedProduct);\r\n    const product = tempCart[index];\r\n    product.count = product.count - 1;\r\n    if (product.count === 0) {\r\n        this.remove(id)\r\n    }\r\n    else{\r\n        product.total = product.count *product.value\r\n        this.setState(\r\n        ()=>{\r\n            return{ order:[...tempCart]}\r\n        },\r\n        ()=>{this.addTotals();\r\n        }\r\n    );\r\n}\r\n    }\r\n    \r\n\r\nremove = (id)=>{\r\n   let tempProducts = [...this.state.menu];\r\n   let tempCart = [...this.state.order];\r\n   tempCart=tempCart.filter(item=>item.id !==id);  \r\n   const index = this.getItem(id);\r\n  \r\n   let removedProduct = tempProducts[index];\r\n   removedProduct.status = false;\r\n   removedProduct.count = 0;\r\n   removedProduct.value = 0;\r\n\r\n   this.setState(()=>{\r\n       return {\r\n           order: [...tempCart],\r\n           menu: [...tempProducts]\r\n       }\r\n   },()=>{\r\n       this.addTotals();\r\n   }\r\n   )\r\n}\r\n\r\nclear = () =>{\r\n    this.setState (()=>{\r\n        return {order:[]}\r\n    },()=>{\r\n        this.setProducts();\r\n        this.addTotals();\r\n    });\r\n    \r\n    \r\n}\r\n\r\naddTotals =()=>{ let total=0;\r\n    this.state.order.map(item=>(total+= item.total))\r\n    this.setState(()=>{\r\n        return{\r\n            cartTotal:total\r\n        }\r\n    })\r\n}\r\n    setProducts = ()=>{\r\n\r\n       \r\n        let tempMenu = [];\r\n         menu.forEach(item=>{\r\n            const singleItem ={...item};\r\n            tempMenu = [...tempMenu,singleItem]\r\n        })\r\n       \r\n        this.setState({\r\n            menu: tempMenu,\r\n           \r\n          });\r\n    }\r\ngetItem = (id) =>{\r\n    let product = this.state.menu.find(item=> item.id ===id).id\r\n   return product\r\n}\r\naddToCart = (id)=>{\r\n     let tempProducts = this.state.menu\r\n     const index = this.getItem(id);\r\n     const product = tempProducts[index]\r\n     product.status = true;\r\n     product.count = 1;\r\n    const price = product.value;\r\n    \r\n    product.total = price;\r\n    \r\n    actualcommand.push(product);\r\n    this.setState(()=>{\r\n        return {menu: tempProducts, order:[...this.state.order, product] };\r\n    },()=>{this.addTotals();});  \r\n}\r\n\r\n    render (){\r\n        return (\r\n        <ProductContext.Provider value = {{\r\n            ...this.state,\r\n            handleProduct: this.handleProduct,\r\n            addToCart: this.addToCart,\r\n            printOrder:this.printOrder,\r\n            increment:this.increment,\r\n            decrement: this.decrement,\r\n            remove: this.remove,\r\n            clear: this.clear,\r\n            writeKitchenData: this.writeKitchenData \r\n        }}>\r\n            {this.props.children}\r\n        </ProductContext.Provider>\r\n        )    \r\n} \r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\nexport {ProductConsumer, ProductProvider};\r\n ","import React from 'react'\r\nimport './CartItem.css'\r\n\r\nexport default function CartItem({item, value}) {\r\n const {id, description, img, price, total, count, date, client, waiter}= item;\r\n const {increment, decrement, remove} =value \r\n\r\n return (\r\n    <div>\r\n      \r\n      <h1>{count} {description} {price} {date} {client} {waiter} </h1>\r\n      <img className = \"card-img-top\" src= {img} ></img>\r\n      <section>\r\n<div class = \"buttonsOptions\">\r\n<button className = \"options btn-primary\"onClick={()=>\r\ndecrement(id)}>-</button>\r\n<button className = \"options btn-primary\"onClick={()=>\r\nincrement(id)}>+</button>\r\n<button className = \"options btn-primary\"onClick={()=>\r\nremove(id)}>delete</button>\r\n </div>\r\n</section>\r\n</div>\r\n   \r\n  )\r\n}\r\n","import React from 'react'\r\nimport CartItem from './CartItem'\r\n\r\nexport default function CartList({value}) {\r\n \r\n const {order} = value\r\n\r\n  return (\r\n    <div className = \"container-table\">\r\n      {order.map(item=>{\r\n        return <CartItem key= {item.description} item = {item} value = {value}/>\r\n      })}\r\n    \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CartTotals({value}) {\r\n   const{cartTotal, clear, writeKitchenData} = value;\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <button className = \"btn btn-primary active\" onClick = {()=>clear()}>Clear\r\n                </button>\r\n            <button className =\"btn btn-primary \" onClick = {()=>writeKitchenData()}>Send\r\n\r\n            </button>\r\n            </div>\r\n            <h5>Total : <strong>$ {cartTotal}</strong></h5>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\n import {ProductConsumer} from './Context';\r\n// import Product from './Product';\r\n import CartList from './CartList';\r\n import CartTotals from './CartTotals';\r\n\r\nexport default class KitchenOrder extends Component{\r\nrender() {\r\n   \r\n    return (\r\n    <React.Fragment>\r\n        <ProductConsumer>\r\n            {value =>{\r\n                const { order } = value ;\r\n                \r\n\r\n            return (\r\n                <section className=\"kitchenOrder\">\r\n                    <CartList value = {value}/>\r\n                    <CartTotals value = {value}/>\r\n                </section>\r\n            );\r\n                \r\n            }}\r\n        </ProductConsumer>\r\n    </React.Fragment>\r\n \r\n    )}\r\n}\r\n","import React, {Component} from 'react';\r\nimport { ProductConsumer, ProductProvider } from './Context';\r\nimport OrderOptions from './OrderOptions';\r\nimport CartItem from './CartItem';\r\nimport CartList from './CartList';\r\nimport KitchenOrder from './KitchenOrder';\r\n//import App from '../App';\r\n\r\nexport default function  Product ({product, value}) {\r\n        const {img, description, price, id }=product;\r\n        return (\r\n            <div className = \"card\">\r\n                  <ProductConsumer>\r\n                      {(value)=>(<div \r\n                className = \"img-container p-5\"  \r\n                onClick = {()=>{\r\n                    value.addToCart(id);\r\n                        }}\r\n                >\r\n                <img src= {img} alt = \"product\"className = \"card-img-top\"/>\r\n               {description}\r\n               {price}\r\n                \r\n            </div> )}\r\n            \r\n            \r\n            </ProductConsumer>\r\n            \r\n        </div>\r\n        \r\n       \r\n        )\r\n    \r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { ProductConsumer } from \"./Context\";\r\nimport Product from \"./Product\";\r\nimport \"./buttonsMenu.css\";\r\n\r\nclass ButtonMenuBreakfast extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isHidden: true\r\n    };\r\n  }\r\n\r\n  toggleHidden() {\r\n    let typeMenu = document.getElementsByClassName(\"typeMenu\")[0];\r\n    typeMenu.setAttribute(\"name\", \"breakfast\");\r\n    this.setState({\r\n      isHidden: !this.state.isHidden\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"menuTable\">\r\n        <button name=\"breakfast\" className= \"btn btn-primary\"onClick={this.toggleHidden.bind(this)}>\r\n          Breakfast Menu\r\n        </button>\r\n        {!this.state.isHidden && (\r\n          <div>\r\n            <React.Fragment>\r\n              <div className=\"menu\">\r\n                <ProductConsumer>\r\n                  {value => {\r\n                    return value.menuBreakfast.map(product => {\r\n                      return <Product key={product.id} product={product} />;\r\n                    });\r\n                  }}\r\n                </ProductConsumer>\r\n              </div>\r\n            </React.Fragment>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonMenuBreakfast;\r\n","import React, { Component } from 'react';\r\nimport { menu } from '../menu.json';\r\nimport ProductList from './ProductList.js';\r\nimport {ProductConsumer} from './Context'\r\nimport Product from './Product';\r\n\r\nclass ButtonMenuMeal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isHidden: true,\r\n    };\r\n  }\r\n\r\n  toggleHidden() {\r\n    this.setState({\r\n      isHidden: !this.state.isHidden,\r\n    })\r\n    \r\n  }\r\n   \r\n  render() {\r\n    return (\r\n\r\n      <div className=\"menuTable\">\r\n        <button className= \"btn btn-primary\" name=\"meal\" onClick={this.toggleHidden.bind(this)} >Meal Menu</button>\r\n        {!this.state.isHidden && (\r\n          <div><React.Fragment>\r\n          <div className = \"menu\">\r\n          <ProductConsumer>\r\n              {value=>{\r\n              return value.menuMeal.map(product =>{\r\n                 return  <Product key={product.id} product = \r\n                 {product} />\r\n              })\r\n          }}\r\n          </ProductConsumer>\r\n          </div>\r\n          </React.Fragment></div>\r\n        )}\r\n      </div>\r\n    ); \r\n  }\r\n};\r\n\r\nexport default ButtonMenuMeal\r\n\r\n","import React, {Component} from 'react';\r\nimport {menu} from '../menu.json';\r\nimport {ProductConsumer} from './Context'\r\nimport Product from './Product';\r\n\r\nexport default class Button extends Component {\r\nrender(){\r\n    //console.log(this.state.products);\r\n\r\nreturn (\r\n<React.Fragment>\r\n<div className = \"menu\">\r\n<ProductConsumer>\r\n    {value=>{\r\n    return value.menuBreakfast.map(product =>{\r\n       return  <Product key={product.id} product = \r\n       {product} />\r\n    })\r\n}}\r\n</ProductConsumer>\r\n</div>\r\n</React.Fragment>\r\n)\r\n}\r\n}\r\n\r\n","import React from \"react\";\r\nimport { ProductProvider } from \"./Context\";\r\nimport ButtonMenuBreakfast from \"./ButtonMenuBreakfast\";\r\nimport ButtonMenuMeal from \"./ButtonMenuMeal\";\r\nimport \"./waiterPage.css\";\r\nimport KitchenOrder from \"./KitchenOrder\";\r\n\r\nfunction WaiterPage() {\r\n  return (\r\n    <section>\r\n      <ProductProvider>\r\n        <div className=\"section group\">\r\n          <div className=\"col span_1_of_2\">\r\n            <ButtonMenuBreakfast />\r\n            <ButtonMenuMeal />\r\n          </div>\r\n          <div className=\"col col2 span_1_of_2\">\r\n            <p>Order</p>\r\n            <span className=\"typeMenu\" name=\"\" />\r\n            <div className=\"order\">\r\n              <KitchenOrder />\r\n              {/* <ProductConsumer>\r\n                {value=>{\r\n                    const {sentToChef}=value\r\n                return (\r\n                <SendToChef value = {value}/>\r\n                )\r\n                }}\r\n                 </ProductConsumer> */}\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ProductProvider>\r\n      \r\n    </section>\r\n  );\r\n}\r\nexport default WaiterPage;\r\n","import React, { Component } from 'react';\r\nimport './Header.css';\r\nimport {Link} from 'react-router-dom'\r\nclass Header extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"header\">\r\n          <h1>Burguer Queen</h1>\r\n          <div className = \"buttonsWho\">\r\n             <Link exact to= '/Waiter'><button Link className=\"btn btn-secondary active\">Waiter</button></Link>\r\n             <Link  to= '/chef'><button className=\"btn btn-secondary\">Chef</button></Link>\r\n            {/* <Link  to= \"/\"><button className=\"btn btn-secondary\">Owner</button></Link> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  } \r\n  export default Header\r\n  \r\n  ","\r\nimport React, { Component } from 'react';\r\nimport firebase from '../firebase'\r\n\r\nlet newState =[]\r\nexport default class PrintInKitchen extends Component {\r\n    constructor (){  \r\n      super();\r\n    this.state = {\r\n        orderPrint: [] \r\n    }\r\n}\r\ncomponentDidMount(){\r\n    this.printOrders();\r\n}\r\n\r\nprintOrders=()=>{\r\n    console.log(this.state.orderPrint)\r\n    let ref = firebase.database().ref('order');\r\n    ref.on('value', snapshot => {\r\n      const newState = snapshot.val();\r\n      console.log(newState);\r\n    });\r\n    this.setState({\r\n        orderPrint:newState\r\n    })\r\n//     {newState.map((item, i)=>{\r\n//         `<p key= ${i}>\r\n//            ${item}\r\n//        </p>`\r\n        \r\n//     })\r\n    \r\n// }\r\n}\r\n    \r\n    render(){ \r\n       return(\r\n<button onClick={this.printOrders}>print</button>\r\n       )\r\n}\r\n}","import React, { Component } from 'react';\r\nimport KitchenOrder from './KitchenOrder';\r\nimport {ProductProvider} from './Context'\r\nimport firebase from '../firebase'\r\nimport PrintInKitchen from './PrintInKitchen'\r\n\r\n\r\nclass ChefPage extends Component {\r\n    render(){\r\n        return (\r\n               <React.Fragment>\r\n<h2 className = \"orders\">Orders\r\n\r\n</h2>\r\n{/* <div><PrintInKitchen/></div> */}\r\n\r\n</React.Fragment>\r\n        )}\r\n}\r\nexport default ChefPage;","import React from 'react';\n//import './App.css';\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport WaiterPage from './components/WaiterPage';\nimport Header from './components/Header';\nimport ChefPage from './components/ChefPage';\nimport KitchenOrder from './components/KitchenOrder';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n     <Header />\n     <Route exact path= '/Waiter' component = {WaiterPage}/>\n    <Route path = '/chef' component = {ChefPage}/>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}